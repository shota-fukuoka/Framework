//=============================================================================
//
// texture_manager.cpp
// Author : SHOTA FUKUOKA
//
//=============================================================================

//*********************************************************
//インクルード
//*********************************************************
#include "texture_manager.h"
#include "texture.h"

///////////////////////////////////////////////////////////////////////////////
// テクスチャ追加
///////////////////////////////////////////////////////////////////////////////
void TextureManager::AddTexture(Texture* tex)
{
	m_list.push_back(tex);
}

///////////////////////////////////////////////////////////////////////////////
// テクスチャ削除
///////////////////////////////////////////////////////////////////////////////
void TextureManager::DeleteTexture(Texture* tex)
{
	for (auto ite = m_list.begin(); ite != m_list.end(); ++ite)
	{
		if (*ite == tex)
		{
			m_list.erase(ite);
			break;
		}
	}
}

///////////////////////////////////////////////////////////////////////////////
// テクスチャピクセル取得
///////////////////////////////////////////////////////////////////////////////
Texture *TextureManager::GetTexture(Texture* tex)
{
	for (auto ite = m_list.begin(); ite != m_list.end(); ++ite)
	{
		if (!strcmp((*ite)->GetName(), tex->GetName()))
		{
			return (*ite);
		}
	}
	return NULL;
}

///////////////////////////////////////////////////////////////////////////////
// テクスチャ解放
///////////////////////////////////////////////////////////////////////////////
void TextureManager::ReleaseAll(void)
{
	for (auto ite = m_list.begin(); ite != m_list.end(); ++ite)
	{
		if (*ite == NULL) { continue; }
		(*ite)->Release();
		delete (*ite);
		(*ite) = NULL;
	}

	m_list.clear();
}